!function(t){var e={};function s(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,s),r.l=!0,r.exports}s.m=t,s.c=e,s.d=function(t,e,o){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(s.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)s.d(o,r,function(e){return t[e]}.bind(null,r));return o},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=1)}([function(t,e,s){},function(t,e,s){"use strict";s.r(e);s(0);const o={elements:{toolsContainer:document.querySelectorAll(".toolsContainer__item"),paintBucket:document.getElementById("paintBucket"),colorPicker:document.getElementById("colorPicker"),pencil:document.getElementById("pencil"),currentColor:document.getElementById("input-color"),prevColor:document.querySelector("#prevColor .circleColor"),canvas:document.getElementById("canvas"),ctx:document.getElementById("canvas").getContext("2d"),searchForm:document.getElementById("searchForm"),searchInput:document.querySelector(".form-control"),selectedCity:document.querySelector(".selectedCity")},colors:{currentColor:"#FF8F00",prevColor:"#000000",red:"#FF0000",blue:"#00BCD4"},state:{activeTool:null,colorRGBA:[],colorHEX:""},canvasParams:{width:512,height:512,resolution:128},init(){if(this.elements.prevColor.style.background="#000000",this.colors.currentColor=this.elements.currentColor.value.toString(),this.state.activeTool=this.elements.pencil.id,this.elements.pencil.classList.add("active"),this.elements.canvas.width=this.canvasParams.width,this.elements.canvas.height=this.canvasParams.height,this.inputColorPicker(),this.eventListeners(),localStorage.getItem("canvasImg")){const t=new Image;t.src=localStorage.getItem("canvasImg"),t.addEventListener("load",()=>{this.elements.ctx.drawImage(t,0,0)})}else this.elements.ctx.rect(0,0,512,512),this.elements.ctx.fillStyle="#FFFFFF",this.elements.ctx.fill()},inputColorPicker(){this.elements.currentColor.addEventListener("change",t=>{const e=document.getElementById("input-color");let s=0;this.colors.prevColor=this.colors.currentColor,this.elements.prevColor.style.background=this.colors.currentColor,e.addEventListener("focus",()=>{(s+=1)>0&&(this.colors.currentColor=t.target.value,this.state.colorRGBA=this.hexToRGBA(this.colors.currentColor))})})},colorPicker(t){const e=this.elements.ctx.getImageData(t.offsetX,t.offsetY,1,1);return"canvas"===t.target.id&&"colorPicker"===this.state.activeTool&&(this.elements.currentColor.value=this.RGBAtoHEX(e.data)),this.RGBAtoHEX(e.data).toUpperCase()},fillBucket(){const t=this.elements.ctx.createImageData(this.elements.canvas.width,this.elements.canvas.height),e=this.hexToRGBA(this.colors.currentColor);for(let s=0;s<t.data.length;s+=4)t.data[s]=e[0],t.data[s+1]=e[1],t.data[s+2]=e[2],t.data[s+3]=255;this.elements.ctx.putImageData(t,0,0)},draw(t){const e=this.canvasParams.width/this.canvasParams.resolution,s=Math.trunc(t.offsetX/e)*e,o=Math.trunc(t.offsetY/e)*e,r=this.elements.ctx.createImageData(e,e);for(let t=0;t<r.data.length;t+=4)r.data[t]=this.state.colorRGBA[0],r.data[t+1]=this.state.colorRGBA[1],r.data[t+2]=this.state.colorRGBA[2],r.data[t+3]=255;this.elements.ctx.putImageData(r,s,o)},drawImg(t){const e=new Image;e.crossOrigin="Anonymous",e.src=t,e.onload=()=>{if(this.elements.ctx.clearRect(0,0,this.canvasParams.width,this.canvasParams.height),e.width>e.height){const t=this.canvasParams.width,s=this.canvasParams.width/e.width*e.height;this.elements.ctx.drawImage(e,0,(this.canvasParams.height-s)/2,t,s)}else if(e.height>e.width){const t=this.canvasParams.width/e.height*e.width,s=this.canvasParams.height;this.elements.ctx.drawImage(e,(this.canvasParams.width-t)/2,0,t,s)}else this.elements.ctx.drawImage(e,0,0,this.canvasParams.width,this.canvasParams.height),this.elements.ctx.drawImage(e,0,0)}},switchTool(t,e){const s=t.target.closest(".toolsContainer__item");switch(t.type){case"mousedown":s&&this.state.activeTool!==s.id&&s.id&&(this.state.activeTool=s.id,this.elements.toolsContainer.forEach(t=>{t.classList.remove("active")}),document.getElementById(s.id).classList.add("active"));break;case"keydown":this.elements.toolsContainer.forEach(t=>{t.classList.remove("active")}),this.state.activeTool=e,document.getElementById(e).classList.add("active")}},hexToRGBA(t){let e=[];if(t){const s=t.replace("#","");e=[parseInt(s.substr(0,2),16),parseInt(s.substr(2,2),16),parseInt(s.substr(4,2),16),255],this.state.colorRGBA=e}return e},RGBAtoHEX(t){if("string"==typeof t){let e="#";return t.replace("rgb","").replace("(","").replace(")","").replace(" ","").replace(" ","").split(",").forEach(t=>{t<16&&(e+=0),e+=Number(t).toString(16)}),this.state.colorHEX=e,e}const e=Array.from(t);e.pop();const s=`rgb(${e.join(",")})`;return this.RGBAtoHEX(s)},eventListeners(){window.addEventListener("mousedown",t=>{const e="CANVAS"===t.target.tagName;if(this.switchTool(t),t.target.classList.contains("sideBar__item")?this.canvasParams.resolution=t.target.children[0].value:t.target.classList.contains("checkmark")?this.canvasParams.resolution=t.target.previousSibling.previousSibling.value:t.target.classList.contains("input-radio")&&(this.canvasParams.resolution=t.target.value),e)switch(this.state.activeTool){case"paintBucket":this.fillBucket();break;case"colorPicker":this.colors.currentColor=this.colorPicker(t),this.state.colorRGBA=this.hexToRGBA(this.colors.currentColor);break;case"pencil":this.draw(t),this.state.mousedown=!0}switch(t.target.id){case"prevColor":this.colors.currentColor=this.RGBAtoHEX(this.elements.prevColor.style.background),this.elements.currentColor.value=this.RGBAtoHEX(this.elements.prevColor.style.background),this.state.colorRGBA=this.hexToRGBA(this.colors.currentColor);break;case"red":this.colors.currentColor="#FF0000",this.state.colorRGBA=this.hexToRGBA(this.colors.currentColor),this.elements.currentColor.value="#FF0000";break;case"blue":this.colors.currentColor="#0b00d4",this.state.colorRGBA=this.hexToRGBA(this.colors.currentColor),this.elements.currentColor.value="#0b00d4"}}),window.addEventListener("mousemove",t=>{this.state.mousedown&&this.draw(t)}),window.addEventListener("mouseup",()=>{this.state.mousedown=!1}),window.addEventListener("keydown",t=>{switch(t.code){case"KeyB":this.switchTool(t,"paintBucket");break;case"KeyP":this.switchTool(t,"pencil");break;case"KeyC":this.switchTool(t,"colorPicker")}}),this.elements.searchForm.addEventListener("submit",t=>{t.preventDefault(),this.state.currentSearchText=this.elements.searchInput.value,console.log(this.canvasParams.width,this.canvasParams.height),(async t=>{const e=`?query=town, ${t.trim()}&client_id=3ec6babd8ab7bb3d860246e52e49cd3a9578091420e232f79e8a55af74b846d6`;try{const t=await fetch("https://api.unsplash.com/photos/random"+e);return await t.json()}catch(t){console.log(t)}})(this.state.currentSearchText).then(t=>{this.drawImg(t.urls.regular),null!==t.location.name?this.elements.selectedCity.textContent=t.location.name:this.elements.selectedCity.textContent=t.alt_description}).catch(t=>console.log(t)),this.elements.searchForm.reset()})}};o.init(),window.addEventListener("unload",()=>{const t=o.elements.canvas;localStorage.setItem("canvasImg",t.toDataURL())})}]);